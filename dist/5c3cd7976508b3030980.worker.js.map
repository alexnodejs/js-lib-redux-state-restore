{"version":3,"sources":["webpack://PayseraReduxStateRestore/webpack/bootstrap","webpack://PayseraReduxStateRestore/./node_modules/@babel/runtime/helpers/setPrototypeOf.js","webpack://PayseraReduxStateRestore/./node_modules/@babel/runtime/helpers/getPrototypeOf.js","webpack://PayseraReduxStateRestore/./node_modules/promise-worker/register.js","webpack://PayseraReduxStateRestore/./node_modules/localforage/dist/localforage.js","webpack://PayseraReduxStateRestore/./node_modules/@babel/runtime/helpers/classCallCheck.js","webpack://PayseraReduxStateRestore/./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","webpack://PayseraReduxStateRestore/./node_modules/@babel/runtime/helpers/inherits.js","webpack://PayseraReduxStateRestore/./node_modules/@babel/runtime/helpers/wrapNativeSuper.js","webpack://PayseraReduxStateRestore/(webpack)/buildin/global.js","webpack://PayseraReduxStateRestore/./node_modules/@babel/runtime/helpers/typeof.js","webpack://PayseraReduxStateRestore/./node_modules/@babel/runtime/helpers/assertThisInitialized.js","webpack://PayseraReduxStateRestore/./node_modules/@babel/runtime/helpers/isNativeFunction.js","webpack://PayseraReduxStateRestore/./node_modules/@babel/runtime/helpers/construct.js","webpack://PayseraReduxStateRestore/./src/error/StorageError.js","webpack://PayseraReduxStateRestore/./src/storage/storageManager.js","webpack://PayseraReduxStateRestore/./src/storage/storage.worker.js","webpack://PayseraReduxStateRestore/./src/constants/workerTasks.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","_setPrototypeOf","setPrototypeOf","__proto__","_getPrototypeOf","getPrototypeOf","callback","postOutgoingMessage","e","messageId","error","result","postMessage","msg","self","ports","console","message","addEventListener","payload","data","Array","isArray","length","Error","obj","res","err","tryCatchFunc","then","finalResult","finalError","handleIncomingMessage","u","require","a","f","code","1","_dereq_","global","scheduleDrain","draining","Mutation","MutationObserver","WebKitMutationObserver","called","observer","nextTick","element","document","createTextNode","observe","characterData","setImmediate","MessageChannel","createElement","scriptEl","onreadystatechange","parentNode","removeChild","documentElement","appendChild","setTimeout","channel","port1","onmessage","port2","queue","oldQueue","len","task","push","this","window","2","immediate","INTERNAL","handlers","REJECTED","FULFILLED","PENDING","Promise","resolver","TypeError","state","outcome","safelyResolveThenable","QueueItem","promise","onFulfilled","onRejected","callFulfilled","otherCallFulfilled","callRejected","otherCallRejected","unwrap","func","returnValue","reject","resolve","getThen","apply","arguments","thenable","onError","onSuccess","tryCatch","status","out","constructor","reason","all","iterable","toString","values","resolved","allResolver","outValue","race","response","3","4","_typeof","iterator","idb","indexedDB","webkitIndexedDB","mozIndexedDB","OIndexedDB","msIndexedDB","getIDB","createBlob","parts","properties","Blob","builder","BlobBuilder","MSBlobBuilder","MozBlobBuilder","WebKitBlobBuilder","append","getBlob","type","Promise$1","executeCallback","executeTwoCallbacks","errorCallback","normalizeKey","warn","String","getCallback","DETECT_BLOB_SUPPORT_STORE","supportsBlobs","dbContexts","READ_ONLY","READ_WRITE","_checkBlobSupport","txn","transaction","blob","objectStore","put","onabort","preventDefault","stopPropagation","oncomplete","matchedChrome","navigator","userAgent","match","matchedEdge","parseInt","_checkBlobSupportWithoutCaching","_deferReadiness","dbInfo","dbContext","deferredOperation","deferredOperations","dbReady","_advanceReadiness","pop","_rejectReadiness","_getConnection","upgradeNeeded","forages","db","close","dbArgs","version","openreq","open","onupgradeneeded","createObjectStore","storeName","oldVersion","ex","newVersion","onerror","onsuccess","_getOriginalConnection","_getUpgradedConnection","_isUpgradeNeeded","defaultVersion","isNewStore","objectStoreNames","contains","isDowngrade","isUpgrade","incVersion","_decodeBlob","encodedBlob","bin","buf","ArrayBuffer","arr","Uint8Array","charCodeAt","_binStringToArrayBuffer","atob","_isEncodedBlob","__local_forage_encoded_blob","_fullyReady","_initReady","_dbInfo","createTransaction","retries","undefined","tx","forage","_tryReconnect","asyncStorage","_driver","_initStorage","options","ready","initPromises","ignoreErrors","j","slice","_defaultConfig","k","_support","isSafari","openDatabase","test","platform","hasFetch","fetch","indexOf","IDBKeyRange","isIndexedDBValid","iterate","req","openCursor","iterationNumber","cursor","getItem","setItem","blobSupport","reader","FileReader","onloadend","base64","btoa","target","readAsBinaryString","store","removeItem","clear","count","advanced","advance","keys","dropInstance","currentConfig","config","dbPromise","deleteObjectStore","_forage2","deleteDatabase","onblocked","BASE_CHARS","BLOB_TYPE_PREFIX","BLOB_TYPE_PREFIX_REGEX","SERIALIZED_MARKER","SERIALIZED_MARKER_LENGTH","TYPE_ARRAYBUFFER","TYPE_BLOB","TYPE_INT8ARRAY","TYPE_UINT8ARRAY","TYPE_UINT8CLAMPEDARRAY","TYPE_INT16ARRAY","TYPE_INT32ARRAY","TYPE_UINT16ARRAY","TYPE_UINT32ARRAY","TYPE_FLOAT32ARRAY","TYPE_FLOAT64ARRAY","TYPE_SERIALIZED_MARKER_LENGTH","toString$1","stringToBuffer","serializedString","encoded1","encoded2","encoded3","encoded4","bufferLength","buffer","bytes","bufferToString","base64String","substring","localforageSerializer","serialize","valueType","marker","fileReader","onload","str","readAsArrayBuffer","JSON","stringify","deserialize","parse","blobType","matcher","Int8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","createDbTable","executeSql","tryExecuteSql","sqlStatement","args","SYNTAX_ERR","results","rows","_setItem","retriesLeft","originalValue","serializer","sqlError","QUOTA_ERR","webSQLStorage","dbInfoPromise","description","size","item","storeNames","getAllStoreNames","operationInfo","dropTable","operations","_getKeyPrefix","defaultConfig","keyPrefix","_isLocalStorageUsable","localStorage","checkIfLocalStorageThrows","localStorageWrapper","isLocalStorageValid","keyPrefixLength","itemKey","includes","array","searchElement","x","y","isNaN","arg","DefinedDrivers","DriverSupport","DefaultDrivers","INDEXEDDB","WEBSQL","LOCALSTORAGE","DefaultDriverOrder","OptionalDriverMethods","LibraryMethods","concat","DefaultConfig","driver","callWhenReady","localForageInstance","libraryMethod","_args","extend","_key","localforage_js","LocalForage","driverTypeKey","instance","Constructor","_classCallCheck","driverName","defineDriver","_config","_driverSet","_initDriver","_ready","_wrapLibraryMethodsWithReady","setDriver","replace","driverObject","complianceError","driverMethods","driverMethodName","methodNotImplementedFactory","methodName","_i","_len","optionalDriverMethod","configureMissingMethods","setDriverSupport","support","info","getDriver","getDriverPromise","getSerializer","serializerPromise","drivers","supportedDrivers","_getSupportedDrivers","setDriverToConfig","extendSelfWithDriver","_extend","oldDriverSetDone","currentDriverIndex","driverPromiseLoop","initDriver","supports","libraryMethodsAndProperties","createInstance","assertThisInitialized","subClass","superClass","writable","configurable","isNativeFunction","construct","_wrapNativeSuper","Class","_cache","Map","has","set","Wrapper","g","Function","_typeof2","ReferenceError","fn","_construct","Parent","Reflect","sham","Proxy","Date","isNativeReflectConstruct","StorageError","stores","storageConfig","localForage","async","eventMessage","identifier","storageManager"],"mappings":"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","file":"5c3cd7976508b3030980.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 13);\n","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nmodule.exports = _getPrototypeOf;","'use strict'\n\nfunction isPromise (obj) {\n  // via https://unpkg.com/is-promise@2.1.0/index.js\n  return !!obj && (typeof obj === 'object' || typeof obj === 'function') && typeof obj.then === 'function'\n}\n\nfunction registerPromiseWorker (callback) {\n  function postOutgoingMessage (e, messageId, error, result) {\n    function postMessage (msg) {\n      /* istanbul ignore if */\n      if (typeof self.postMessage !== 'function') { // service worker\n        e.ports[0].postMessage(msg)\n      } else { // web worker\n        self.postMessage(msg)\n      }\n    }\n    if (error) {\n      /* istanbul ignore else */\n      if (typeof console !== 'undefined' && 'error' in console) {\n        // This is to make errors easier to debug. I think it's important\n        // enough to just leave here without giving the user an option\n        // to silence it.\n        console.error('Worker caught an error:', error)\n      }\n      postMessage([messageId, {\n        message: error.message\n      }])\n    } else {\n      postMessage([messageId, null, result])\n    }\n  }\n\n  function tryCatchFunc (callback, message) {\n    try {\n      return { res: callback(message) }\n    } catch (e) {\n      return { err: e }\n    }\n  }\n\n  function handleIncomingMessage (e, callback, messageId, message) {\n    var result = tryCatchFunc(callback, message)\n\n    if (result.err) {\n      postOutgoingMessage(e, messageId, result.err)\n    } else if (!isPromise(result.res)) {\n      postOutgoingMessage(e, messageId, null, result.res)\n    } else {\n      result.res.then(function (finalResult) {\n        postOutgoingMessage(e, messageId, null, finalResult)\n      }, function (finalError) {\n        postOutgoingMessage(e, messageId, finalError)\n      })\n    }\n  }\n\n  function onIncomingMessage (e) {\n    var payload = e.data\n    if (!Array.isArray(payload) || payload.length !== 2) {\n      // message doens't match communication format; ignore\n      return\n    }\n    var messageId = payload[0]\n    var message = payload[1]\n\n    if (typeof callback !== 'function') {\n      postOutgoingMessage(e, messageId, new Error(\n        'Please pass a function into register().'))\n    } else {\n      handleIncomingMessage(e, callback, messageId, message)\n    }\n  }\n\n  self.addEventListener('message', onIncomingMessage)\n}\n\nmodule.exports = registerPromiseWorker\n","/*!\n    localForage -- Offline Storage, Improved\n    Version 1.7.3\n    https://localforage.github.io/localForage\n    (c) 2013-2017 Mozilla, Apache License 2.0\n*/\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.localforage = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw (f.code=\"MODULE_NOT_FOUND\", f)}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nvar Mutation = global.MutationObserver || global.WebKitMutationObserver;\n\nvar scheduleDrain;\n\n{\n  if (Mutation) {\n    var called = 0;\n    var observer = new Mutation(nextTick);\n    var element = global.document.createTextNode('');\n    observer.observe(element, {\n      characterData: true\n    });\n    scheduleDrain = function () {\n      element.data = (called = ++called % 2);\n    };\n  } else if (!global.setImmediate && typeof global.MessageChannel !== 'undefined') {\n    var channel = new global.MessageChannel();\n    channel.port1.onmessage = nextTick;\n    scheduleDrain = function () {\n      channel.port2.postMessage(0);\n    };\n  } else if ('document' in global && 'onreadystatechange' in global.document.createElement('script')) {\n    scheduleDrain = function () {\n\n      // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n      // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n      var scriptEl = global.document.createElement('script');\n      scriptEl.onreadystatechange = function () {\n        nextTick();\n\n        scriptEl.onreadystatechange = null;\n        scriptEl.parentNode.removeChild(scriptEl);\n        scriptEl = null;\n      };\n      global.document.documentElement.appendChild(scriptEl);\n    };\n  } else {\n    scheduleDrain = function () {\n      setTimeout(nextTick, 0);\n    };\n  }\n}\n\nvar draining;\nvar queue = [];\n//named nextTick for less confusing stack traces\nfunction nextTick() {\n  draining = true;\n  var i, oldQueue;\n  var len = queue.length;\n  while (len) {\n    oldQueue = queue;\n    queue = [];\n    i = -1;\n    while (++i < len) {\n      oldQueue[i]();\n    }\n    len = queue.length;\n  }\n  draining = false;\n}\n\nmodule.exports = immediate;\nfunction immediate(task) {\n  if (queue.push(task) === 1 && !draining) {\n    scheduleDrain();\n  }\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],2:[function(_dereq_,module,exports){\n'use strict';\nvar immediate = _dereq_(1);\n\n/* istanbul ignore next */\nfunction INTERNAL() {}\n\nvar handlers = {};\n\nvar REJECTED = ['REJECTED'];\nvar FULFILLED = ['FULFILLED'];\nvar PENDING = ['PENDING'];\n\nmodule.exports = Promise;\n\nfunction Promise(resolver) {\n  if (typeof resolver !== 'function') {\n    throw new TypeError('resolver must be a function');\n  }\n  this.state = PENDING;\n  this.queue = [];\n  this.outcome = void 0;\n  if (resolver !== INTERNAL) {\n    safelyResolveThenable(this, resolver);\n  }\n}\n\nPromise.prototype[\"catch\"] = function (onRejected) {\n  return this.then(null, onRejected);\n};\nPromise.prototype.then = function (onFulfilled, onRejected) {\n  if (typeof onFulfilled !== 'function' && this.state === FULFILLED ||\n    typeof onRejected !== 'function' && this.state === REJECTED) {\n    return this;\n  }\n  var promise = new this.constructor(INTERNAL);\n  if (this.state !== PENDING) {\n    var resolver = this.state === FULFILLED ? onFulfilled : onRejected;\n    unwrap(promise, resolver, this.outcome);\n  } else {\n    this.queue.push(new QueueItem(promise, onFulfilled, onRejected));\n  }\n\n  return promise;\n};\nfunction QueueItem(promise, onFulfilled, onRejected) {\n  this.promise = promise;\n  if (typeof onFulfilled === 'function') {\n    this.onFulfilled = onFulfilled;\n    this.callFulfilled = this.otherCallFulfilled;\n  }\n  if (typeof onRejected === 'function') {\n    this.onRejected = onRejected;\n    this.callRejected = this.otherCallRejected;\n  }\n}\nQueueItem.prototype.callFulfilled = function (value) {\n  handlers.resolve(this.promise, value);\n};\nQueueItem.prototype.otherCallFulfilled = function (value) {\n  unwrap(this.promise, this.onFulfilled, value);\n};\nQueueItem.prototype.callRejected = function (value) {\n  handlers.reject(this.promise, value);\n};\nQueueItem.prototype.otherCallRejected = function (value) {\n  unwrap(this.promise, this.onRejected, value);\n};\n\nfunction unwrap(promise, func, value) {\n  immediate(function () {\n    var returnValue;\n    try {\n      returnValue = func(value);\n    } catch (e) {\n      return handlers.reject(promise, e);\n    }\n    if (returnValue === promise) {\n      handlers.reject(promise, new TypeError('Cannot resolve promise with itself'));\n    } else {\n      handlers.resolve(promise, returnValue);\n    }\n  });\n}\n\nhandlers.resolve = function (self, value) {\n  var result = tryCatch(getThen, value);\n  if (result.status === 'error') {\n    return handlers.reject(self, result.value);\n  }\n  var thenable = result.value;\n\n  if (thenable) {\n    safelyResolveThenable(self, thenable);\n  } else {\n    self.state = FULFILLED;\n    self.outcome = value;\n    var i = -1;\n    var len = self.queue.length;\n    while (++i < len) {\n      self.queue[i].callFulfilled(value);\n    }\n  }\n  return self;\n};\nhandlers.reject = function (self, error) {\n  self.state = REJECTED;\n  self.outcome = error;\n  var i = -1;\n  var len = self.queue.length;\n  while (++i < len) {\n    self.queue[i].callRejected(error);\n  }\n  return self;\n};\n\nfunction getThen(obj) {\n  // Make sure we only access the accessor once as required by the spec\n  var then = obj && obj.then;\n  if (obj && (typeof obj === 'object' || typeof obj === 'function') && typeof then === 'function') {\n    return function appyThen() {\n      then.apply(obj, arguments);\n    };\n  }\n}\n\nfunction safelyResolveThenable(self, thenable) {\n  // Either fulfill, reject or reject with error\n  var called = false;\n  function onError(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.reject(self, value);\n  }\n\n  function onSuccess(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.resolve(self, value);\n  }\n\n  function tryToUnwrap() {\n    thenable(onSuccess, onError);\n  }\n\n  var result = tryCatch(tryToUnwrap);\n  if (result.status === 'error') {\n    onError(result.value);\n  }\n}\n\nfunction tryCatch(func, value) {\n  var out = {};\n  try {\n    out.value = func(value);\n    out.status = 'success';\n  } catch (e) {\n    out.status = 'error';\n    out.value = e;\n  }\n  return out;\n}\n\nPromise.resolve = resolve;\nfunction resolve(value) {\n  if (value instanceof this) {\n    return value;\n  }\n  return handlers.resolve(new this(INTERNAL), value);\n}\n\nPromise.reject = reject;\nfunction reject(reason) {\n  var promise = new this(INTERNAL);\n  return handlers.reject(promise, reason);\n}\n\nPromise.all = all;\nfunction all(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var values = new Array(len);\n  var resolved = 0;\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    allResolver(iterable[i], i);\n  }\n  return promise;\n  function allResolver(value, i) {\n    self.resolve(value).then(resolveFromAll, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n    function resolveFromAll(outValue) {\n      values[i] = outValue;\n      if (++resolved === len && !called) {\n        called = true;\n        handlers.resolve(promise, values);\n      }\n    }\n  }\n}\n\nPromise.race = race;\nfunction race(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    resolver(iterable[i]);\n  }\n  return promise;\n  function resolver(value) {\n    self.resolve(value).then(function (response) {\n      if (!called) {\n        called = true;\n        handlers.resolve(promise, response);\n      }\n    }, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n  }\n}\n\n},{\"1\":1}],3:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nif (typeof global.Promise !== 'function') {\n  global.Promise = _dereq_(2);\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"2\":2}],4:[function(_dereq_,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction getIDB() {\n    /* global indexedDB,webkitIndexedDB,mozIndexedDB,OIndexedDB,msIndexedDB */\n    try {\n        if (typeof indexedDB !== 'undefined') {\n            return indexedDB;\n        }\n        if (typeof webkitIndexedDB !== 'undefined') {\n            return webkitIndexedDB;\n        }\n        if (typeof mozIndexedDB !== 'undefined') {\n            return mozIndexedDB;\n        }\n        if (typeof OIndexedDB !== 'undefined') {\n            return OIndexedDB;\n        }\n        if (typeof msIndexedDB !== 'undefined') {\n            return msIndexedDB;\n        }\n    } catch (e) {\n        return;\n    }\n}\n\nvar idb = getIDB();\n\nfunction isIndexedDBValid() {\n    try {\n        // Initialize IndexedDB; fall back to vendor-prefixed versions\n        // if needed.\n        if (!idb) {\n            return false;\n        }\n        // We mimic PouchDB here;\n        //\n        // We test for openDatabase because IE Mobile identifies itself\n        // as Safari. Oh the lulz...\n        var isSafari = typeof openDatabase !== 'undefined' && /(Safari|iPhone|iPad|iPod)/.test(navigator.userAgent) && !/Chrome/.test(navigator.userAgent) && !/BlackBerry/.test(navigator.platform);\n\n        var hasFetch = typeof fetch === 'function' && fetch.toString().indexOf('[native code') !== -1;\n\n        // Safari <10.1 does not meet our requirements for IDB support (#5572)\n        // since Safari 10.1 shipped with fetch, we can use that to detect it\n        return (!isSafari || hasFetch) && typeof indexedDB !== 'undefined' &&\n        // some outdated implementations of IDB that appear on Samsung\n        // and HTC Android devices <4.4 are missing IDBKeyRange\n        // See: https://github.com/mozilla/localForage/issues/128\n        // See: https://github.com/mozilla/localForage/issues/272\n        typeof IDBKeyRange !== 'undefined';\n    } catch (e) {\n        return false;\n    }\n}\n\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\nfunction createBlob(parts, properties) {\n    /* global BlobBuilder,MSBlobBuilder,MozBlobBuilder,WebKitBlobBuilder */\n    parts = parts || [];\n    properties = properties || {};\n    try {\n        return new Blob(parts, properties);\n    } catch (e) {\n        if (e.name !== 'TypeError') {\n            throw e;\n        }\n        var Builder = typeof BlobBuilder !== 'undefined' ? BlobBuilder : typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder : typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder : WebKitBlobBuilder;\n        var builder = new Builder();\n        for (var i = 0; i < parts.length; i += 1) {\n            builder.append(parts[i]);\n        }\n        return builder.getBlob(properties.type);\n    }\n}\n\n// This is CommonJS because lie is an external dependency, so Rollup\n// can just ignore it.\nif (typeof Promise === 'undefined') {\n    // In the \"nopromises\" build this will just throw if you don't have\n    // a global promise object, but it would throw anyway later.\n    _dereq_(3);\n}\nvar Promise$1 = Promise;\n\nfunction executeCallback(promise, callback) {\n    if (callback) {\n        promise.then(function (result) {\n            callback(null, result);\n        }, function (error) {\n            callback(error);\n        });\n    }\n}\n\nfunction executeTwoCallbacks(promise, callback, errorCallback) {\n    if (typeof callback === 'function') {\n        promise.then(callback);\n    }\n\n    if (typeof errorCallback === 'function') {\n        promise[\"catch\"](errorCallback);\n    }\n}\n\nfunction normalizeKey(key) {\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    return key;\n}\n\nfunction getCallback() {\n    if (arguments.length && typeof arguments[arguments.length - 1] === 'function') {\n        return arguments[arguments.length - 1];\n    }\n}\n\n// Some code originally from async_storage.js in\n// [Gaia](https://github.com/mozilla-b2g/gaia).\n\nvar DETECT_BLOB_SUPPORT_STORE = 'local-forage-detect-blob-support';\nvar supportsBlobs = void 0;\nvar dbContexts = {};\nvar toString = Object.prototype.toString;\n\n// Transaction Modes\nvar READ_ONLY = 'readonly';\nvar READ_WRITE = 'readwrite';\n\n// Transform a binary string to an array buffer, because otherwise\n// weird stuff happens when you try to work with the binary string directly.\n// It is known.\n// From http://stackoverflow.com/questions/14967647/ (continues on next line)\n// encode-decode-image-with-base64-breaks-image (2013-04-21)\nfunction _binStringToArrayBuffer(bin) {\n    var length = bin.length;\n    var buf = new ArrayBuffer(length);\n    var arr = new Uint8Array(buf);\n    for (var i = 0; i < length; i++) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return buf;\n}\n\n//\n// Blobs are not supported in all versions of IndexedDB, notably\n// Chrome <37 and Android <5. In those versions, storing a blob will throw.\n//\n// Various other blob bugs exist in Chrome v37-42 (inclusive).\n// Detecting them is expensive and confusing to users, and Chrome 37-42\n// is at very low usage worldwide, so we do a hacky userAgent check instead.\n//\n// content-type bug: https://code.google.com/p/chromium/issues/detail?id=408120\n// 404 bug: https://code.google.com/p/chromium/issues/detail?id=447916\n// FileReader bug: https://code.google.com/p/chromium/issues/detail?id=447836\n//\n// Code borrowed from PouchDB. See:\n// https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-adapter-idb/src/blobSupport.js\n//\nfunction _checkBlobSupportWithoutCaching(idb) {\n    return new Promise$1(function (resolve) {\n        var txn = idb.transaction(DETECT_BLOB_SUPPORT_STORE, READ_WRITE);\n        var blob = createBlob(['']);\n        txn.objectStore(DETECT_BLOB_SUPPORT_STORE).put(blob, 'key');\n\n        txn.onabort = function (e) {\n            // If the transaction aborts now its due to not being able to\n            // write to the database, likely due to the disk being full\n            e.preventDefault();\n            e.stopPropagation();\n            resolve(false);\n        };\n\n        txn.oncomplete = function () {\n            var matchedChrome = navigator.userAgent.match(/Chrome\\/(\\d+)/);\n            var matchedEdge = navigator.userAgent.match(/Edge\\//);\n            // MS Edge pretends to be Chrome 42:\n            // https://msdn.microsoft.com/en-us/library/hh869301%28v=vs.85%29.aspx\n            resolve(matchedEdge || !matchedChrome || parseInt(matchedChrome[1], 10) >= 43);\n        };\n    })[\"catch\"](function () {\n        return false; // error, so assume unsupported\n    });\n}\n\nfunction _checkBlobSupport(idb) {\n    if (typeof supportsBlobs === 'boolean') {\n        return Promise$1.resolve(supportsBlobs);\n    }\n    return _checkBlobSupportWithoutCaching(idb).then(function (value) {\n        supportsBlobs = value;\n        return supportsBlobs;\n    });\n}\n\nfunction _deferReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Create a deferred object representing the current database operation.\n    var deferredOperation = {};\n\n    deferredOperation.promise = new Promise$1(function (resolve, reject) {\n        deferredOperation.resolve = resolve;\n        deferredOperation.reject = reject;\n    });\n\n    // Enqueue the deferred operation.\n    dbContext.deferredOperations.push(deferredOperation);\n\n    // Chain its promise to the database readiness.\n    if (!dbContext.dbReady) {\n        dbContext.dbReady = deferredOperation.promise;\n    } else {\n        dbContext.dbReady = dbContext.dbReady.then(function () {\n            return deferredOperation.promise;\n        });\n    }\n}\n\nfunction _advanceReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Resolve its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.resolve();\n        return deferredOperation.promise;\n    }\n}\n\nfunction _rejectReadiness(dbInfo, err) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Reject its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.reject(err);\n        return deferredOperation.promise;\n    }\n}\n\nfunction _getConnection(dbInfo, upgradeNeeded) {\n    return new Promise$1(function (resolve, reject) {\n        dbContexts[dbInfo.name] = dbContexts[dbInfo.name] || createDbContext();\n\n        if (dbInfo.db) {\n            if (upgradeNeeded) {\n                _deferReadiness(dbInfo);\n                dbInfo.db.close();\n            } else {\n                return resolve(dbInfo.db);\n            }\n        }\n\n        var dbArgs = [dbInfo.name];\n\n        if (upgradeNeeded) {\n            dbArgs.push(dbInfo.version);\n        }\n\n        var openreq = idb.open.apply(idb, dbArgs);\n\n        if (upgradeNeeded) {\n            openreq.onupgradeneeded = function (e) {\n                var db = openreq.result;\n                try {\n                    db.createObjectStore(dbInfo.storeName);\n                    if (e.oldVersion <= 1) {\n                        // Added when support for blob shims was added\n                        db.createObjectStore(DETECT_BLOB_SUPPORT_STORE);\n                    }\n                } catch (ex) {\n                    if (ex.name === 'ConstraintError') {\n                        console.warn('The database \"' + dbInfo.name + '\"' + ' has been upgraded from version ' + e.oldVersion + ' to version ' + e.newVersion + ', but the storage \"' + dbInfo.storeName + '\" already exists.');\n                    } else {\n                        throw ex;\n                    }\n                }\n            };\n        }\n\n        openreq.onerror = function (e) {\n            e.preventDefault();\n            reject(openreq.error);\n        };\n\n        openreq.onsuccess = function () {\n            resolve(openreq.result);\n            _advanceReadiness(dbInfo);\n        };\n    });\n}\n\nfunction _getOriginalConnection(dbInfo) {\n    return _getConnection(dbInfo, false);\n}\n\nfunction _getUpgradedConnection(dbInfo) {\n    return _getConnection(dbInfo, true);\n}\n\nfunction _isUpgradeNeeded(dbInfo, defaultVersion) {\n    if (!dbInfo.db) {\n        return true;\n    }\n\n    var isNewStore = !dbInfo.db.objectStoreNames.contains(dbInfo.storeName);\n    var isDowngrade = dbInfo.version < dbInfo.db.version;\n    var isUpgrade = dbInfo.version > dbInfo.db.version;\n\n    if (isDowngrade) {\n        // If the version is not the default one\n        // then warn for impossible downgrade.\n        if (dbInfo.version !== defaultVersion) {\n            console.warn('The database \"' + dbInfo.name + '\"' + \" can't be downgraded from version \" + dbInfo.db.version + ' to version ' + dbInfo.version + '.');\n        }\n        // Align the versions to prevent errors.\n        dbInfo.version = dbInfo.db.version;\n    }\n\n    if (isUpgrade || isNewStore) {\n        // If the store is new then increment the version (if needed).\n        // This will trigger an \"upgradeneeded\" event which is required\n        // for creating a store.\n        if (isNewStore) {\n            var incVersion = dbInfo.db.version + 1;\n            if (incVersion > dbInfo.version) {\n                dbInfo.version = incVersion;\n            }\n        }\n\n        return true;\n    }\n\n    return false;\n}\n\n// encode a blob for indexeddb engines that don't support blobs\nfunction _encodeBlob(blob) {\n    return new Promise$1(function (resolve, reject) {\n        var reader = new FileReader();\n        reader.onerror = reject;\n        reader.onloadend = function (e) {\n            var base64 = btoa(e.target.result || '');\n            resolve({\n                __local_forage_encoded_blob: true,\n                data: base64,\n                type: blob.type\n            });\n        };\n        reader.readAsBinaryString(blob);\n    });\n}\n\n// decode an encoded blob\nfunction _decodeBlob(encodedBlob) {\n    var arrayBuff = _binStringToArrayBuffer(atob(encodedBlob.data));\n    return createBlob([arrayBuff], { type: encodedBlob.type });\n}\n\n// is this one of our fancy encoded blobs?\nfunction _isEncodedBlob(value) {\n    return value && value.__local_forage_encoded_blob;\n}\n\n// Specialize the default `ready()` function by making it dependent\n// on the current database operations. Thus, the driver will be actually\n// ready when it's been initialized (default) *and* there are no pending\n// operations on the database (initiated by some other instances).\nfunction _fullyReady(callback) {\n    var self = this;\n\n    var promise = self._initReady().then(function () {\n        var dbContext = dbContexts[self._dbInfo.name];\n\n        if (dbContext && dbContext.dbReady) {\n            return dbContext.dbReady;\n        }\n    });\n\n    executeTwoCallbacks(promise, callback, callback);\n    return promise;\n}\n\n// Try to establish a new db connection to replace the\n// current one which is broken (i.e. experiencing\n// InvalidStateError while creating a transaction).\nfunction _tryReconnect(dbInfo) {\n    _deferReadiness(dbInfo);\n\n    var dbContext = dbContexts[dbInfo.name];\n    var forages = dbContext.forages;\n\n    for (var i = 0; i < forages.length; i++) {\n        var forage = forages[i];\n        if (forage._dbInfo.db) {\n            forage._dbInfo.db.close();\n            forage._dbInfo.db = null;\n        }\n    }\n    dbInfo.db = null;\n\n    return _getOriginalConnection(dbInfo).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        // store the latest db reference\n        // in case the db was upgraded\n        dbInfo.db = dbContext.db = db;\n        for (var i = 0; i < forages.length; i++) {\n            forages[i]._dbInfo.db = db;\n        }\n    })[\"catch\"](function (err) {\n        _rejectReadiness(dbInfo, err);\n        throw err;\n    });\n}\n\n// FF doesn't like Promises (micro-tasks) and IDDB store operations,\n// so we have to do it with callbacks\nfunction createTransaction(dbInfo, mode, callback, retries) {\n    if (retries === undefined) {\n        retries = 1;\n    }\n\n    try {\n        var tx = dbInfo.db.transaction(dbInfo.storeName, mode);\n        callback(null, tx);\n    } catch (err) {\n        if (retries > 0 && (!dbInfo.db || err.name === 'InvalidStateError' || err.name === 'NotFoundError')) {\n            return Promise$1.resolve().then(function () {\n                if (!dbInfo.db || err.name === 'NotFoundError' && !dbInfo.db.objectStoreNames.contains(dbInfo.storeName) && dbInfo.version <= dbInfo.db.version) {\n                    // increase the db version, to create the new ObjectStore\n                    if (dbInfo.db) {\n                        dbInfo.version = dbInfo.db.version + 1;\n                    }\n                    // Reopen the database for upgrading.\n                    return _getUpgradedConnection(dbInfo);\n                }\n            }).then(function () {\n                return _tryReconnect(dbInfo).then(function () {\n                    createTransaction(dbInfo, mode, callback, retries - 1);\n                });\n            })[\"catch\"](callback);\n        }\n\n        callback(err);\n    }\n}\n\nfunction createDbContext() {\n    return {\n        // Running localForages sharing a database.\n        forages: [],\n        // Shared database.\n        db: null,\n        // Database readiness (promise).\n        dbReady: null,\n        // Deferred operations on the database.\n        deferredOperations: []\n    };\n}\n\n// Open the IndexedDB database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    // Get the current context of the database;\n    var dbContext = dbContexts[dbInfo.name];\n\n    // ...or create a new context.\n    if (!dbContext) {\n        dbContext = createDbContext();\n        // Register the new context in the global container.\n        dbContexts[dbInfo.name] = dbContext;\n    }\n\n    // Register itself as a running localForage in the current context.\n    dbContext.forages.push(self);\n\n    // Replace the default `ready()` function with the specialized one.\n    if (!self._initReady) {\n        self._initReady = self.ready;\n        self.ready = _fullyReady;\n    }\n\n    // Create an array of initialization states of the related localForages.\n    var initPromises = [];\n\n    function ignoreErrors() {\n        // Don't handle errors here,\n        // just makes sure related localForages aren't pending.\n        return Promise$1.resolve();\n    }\n\n    for (var j = 0; j < dbContext.forages.length; j++) {\n        var forage = dbContext.forages[j];\n        if (forage !== self) {\n            // Don't wait for itself...\n            initPromises.push(forage._initReady()[\"catch\"](ignoreErrors));\n        }\n    }\n\n    // Take a snapshot of the related localForages.\n    var forages = dbContext.forages.slice(0);\n\n    // Initialize the connection process only when\n    // all the related localForages aren't pending.\n    return Promise$1.all(initPromises).then(function () {\n        dbInfo.db = dbContext.db;\n        // Get the connection or open a new one without upgrade.\n        return _getOriginalConnection(dbInfo);\n    }).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo, self._defaultConfig.version)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        dbInfo.db = dbContext.db = db;\n        self._dbInfo = dbInfo;\n        // Share the final connection amongst related localForages.\n        for (var k = 0; k < forages.length; k++) {\n            var forage = forages[k];\n            if (forage !== self) {\n                // Self is already up-to-date.\n                forage._dbInfo.db = dbInfo.db;\n                forage._dbInfo.version = dbInfo.version;\n            }\n        }\n    });\n}\n\nfunction getItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.get(key);\n\n                    req.onsuccess = function () {\n                        var value = req.result;\n                        if (value === undefined) {\n                            value = null;\n                        }\n                        if (_isEncodedBlob(value)) {\n                            value = _decodeBlob(value);\n                        }\n                        resolve(value);\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items stored in database.\nfunction iterate(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.openCursor();\n                    var iterationNumber = 1;\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n\n                        if (cursor) {\n                            var value = cursor.value;\n                            if (_isEncodedBlob(value)) {\n                                value = _decodeBlob(value);\n                            }\n                            var result = iterator(value, cursor.key, iterationNumber++);\n\n                            // when the iterator callback retuns any\n                            // (non-`undefined`) value, then we stop\n                            // the iteration immediately\n                            if (result !== void 0) {\n                                resolve(result);\n                            } else {\n                                cursor[\"continue\"]();\n                            }\n                        } else {\n                            resolve();\n                        }\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n\n    return promise;\n}\n\nfunction setItem(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        var dbInfo;\n        self.ready().then(function () {\n            dbInfo = self._dbInfo;\n            if (toString.call(value) === '[object Blob]') {\n                return _checkBlobSupport(dbInfo.db).then(function (blobSupport) {\n                    if (blobSupport) {\n                        return value;\n                    }\n                    return _encodeBlob(value);\n                });\n            }\n            return value;\n        }).then(function (value) {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n\n                    // The reason we don't _save_ null is because IE 10 does\n                    // not support saving the `null` type in IndexedDB. How\n                    // ironic, given the bug below!\n                    // See: https://github.com/mozilla/localForage/issues/161\n                    if (value === null) {\n                        value = undefined;\n                    }\n\n                    var req = store.put(value, key);\n\n                    transaction.oncomplete = function () {\n                        // Cast to undefined so the value passed to\n                        // callback/promise is the same as what one would get out\n                        // of `getItem()` later. This leads to some weirdness\n                        // (setItem('foo', undefined) will return `null`), but\n                        // it's not my fault localStorage is our baseline and that\n                        // it's weird.\n                        if (value === undefined) {\n                            value = null;\n                        }\n\n                        resolve(value);\n                    };\n                    transaction.onabort = transaction.onerror = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction removeItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    // We use a Grunt task to make this safe for IE and some\n                    // versions of Android (including those used by Cordova).\n                    // Normally IE won't like `.delete()` and will insist on\n                    // using `['delete']()`, but we have a build step that\n                    // fixes this for us now.\n                    var req = store[\"delete\"](key);\n                    transaction.oncomplete = function () {\n                        resolve();\n                    };\n\n                    transaction.onerror = function () {\n                        reject(req.error);\n                    };\n\n                    // The request will be also be aborted if we've exceeded our storage\n                    // space.\n                    transaction.onabort = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction clear(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.clear();\n\n                    transaction.oncomplete = function () {\n                        resolve();\n                    };\n\n                    transaction.onabort = transaction.onerror = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction length(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.count();\n\n                    req.onsuccess = function () {\n                        resolve(req.result);\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction key(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        if (n < 0) {\n            resolve(null);\n\n            return;\n        }\n\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var advanced = false;\n                    var req = store.openCursor();\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n                        if (!cursor) {\n                            // this means there weren't enough keys\n                            resolve(null);\n\n                            return;\n                        }\n\n                        if (n === 0) {\n                            // We have the first key, return it if that's what they\n                            // wanted.\n                            resolve(cursor.key);\n                        } else {\n                            if (!advanced) {\n                                // Otherwise, ask the cursor to skip ahead n\n                                // records.\n                                advanced = true;\n                                cursor.advance(n);\n                            } else {\n                                // When we get here, we've got the nth key.\n                                resolve(cursor.key);\n                            }\n                        }\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.openCursor();\n                    var keys = [];\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n\n                        if (!cursor) {\n                            resolve(keys);\n                            return;\n                        }\n\n                        keys.push(cursor.key);\n                        cursor[\"continue\"]();\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction dropInstance(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    var currentConfig = this.config();\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        var isCurrentDb = options.name === currentConfig.name && self._dbInfo.db;\n\n        var dbPromise = isCurrentDb ? Promise$1.resolve(self._dbInfo.db) : _getOriginalConnection(options).then(function (db) {\n            var dbContext = dbContexts[options.name];\n            var forages = dbContext.forages;\n            dbContext.db = db;\n            for (var i = 0; i < forages.length; i++) {\n                forages[i]._dbInfo.db = db;\n            }\n            return db;\n        });\n\n        if (!options.storeName) {\n            promise = dbPromise.then(function (db) {\n                _deferReadiness(options);\n\n                var dbContext = dbContexts[options.name];\n                var forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    var forage = forages[i];\n                    forage._dbInfo.db = null;\n                }\n\n                var dropDBPromise = new Promise$1(function (resolve, reject) {\n                    var req = idb.deleteDatabase(options.name);\n\n                    req.onerror = req.onblocked = function (err) {\n                        var db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        reject(err);\n                    };\n\n                    req.onsuccess = function () {\n                        var db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        resolve(db);\n                    };\n                });\n\n                return dropDBPromise.then(function (db) {\n                    dbContext.db = db;\n                    for (var i = 0; i < forages.length; i++) {\n                        var _forage = forages[i];\n                        _advanceReadiness(_forage._dbInfo);\n                    }\n                })[\"catch\"](function (err) {\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                    throw err;\n                });\n            });\n        } else {\n            promise = dbPromise.then(function (db) {\n                if (!db.objectStoreNames.contains(options.storeName)) {\n                    return;\n                }\n\n                var newVersion = db.version + 1;\n\n                _deferReadiness(options);\n\n                var dbContext = dbContexts[options.name];\n                var forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    var forage = forages[i];\n                    forage._dbInfo.db = null;\n                    forage._dbInfo.version = newVersion;\n                }\n\n                var dropObjectPromise = new Promise$1(function (resolve, reject) {\n                    var req = idb.open(options.name, newVersion);\n\n                    req.onerror = function (err) {\n                        var db = req.result;\n                        db.close();\n                        reject(err);\n                    };\n\n                    req.onupgradeneeded = function () {\n                        var db = req.result;\n                        db.deleteObjectStore(options.storeName);\n                    };\n\n                    req.onsuccess = function () {\n                        var db = req.result;\n                        db.close();\n                        resolve(db);\n                    };\n                });\n\n                return dropObjectPromise.then(function (db) {\n                    dbContext.db = db;\n                    for (var j = 0; j < forages.length; j++) {\n                        var _forage2 = forages[j];\n                        _forage2._dbInfo.db = db;\n                        _advanceReadiness(_forage2._dbInfo);\n                    }\n                })[\"catch\"](function (err) {\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                    throw err;\n                });\n            });\n        }\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar asyncStorage = {\n    _driver: 'asyncStorage',\n    _initStorage: _initStorage,\n    _support: isIndexedDBValid(),\n    iterate: iterate,\n    getItem: getItem,\n    setItem: setItem,\n    removeItem: removeItem,\n    clear: clear,\n    length: length,\n    key: key,\n    keys: keys,\n    dropInstance: dropInstance\n};\n\nfunction isWebSQLValid() {\n    return typeof openDatabase === 'function';\n}\n\n// Sadly, the best way to save binary data in WebSQL/localStorage is serializing\n// it to Base64, so this is how we store it to prevent very strange errors with less\n// verbose ways of binary <-> string data storage.\nvar BASE_CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\nvar BLOB_TYPE_PREFIX = '~~local_forage_type~';\nvar BLOB_TYPE_PREFIX_REGEX = /^~~local_forage_type~([^~]+)~/;\n\nvar SERIALIZED_MARKER = '__lfsc__:';\nvar SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER.length;\n\n// OMG the serializations!\nvar TYPE_ARRAYBUFFER = 'arbf';\nvar TYPE_BLOB = 'blob';\nvar TYPE_INT8ARRAY = 'si08';\nvar TYPE_UINT8ARRAY = 'ui08';\nvar TYPE_UINT8CLAMPEDARRAY = 'uic8';\nvar TYPE_INT16ARRAY = 'si16';\nvar TYPE_INT32ARRAY = 'si32';\nvar TYPE_UINT16ARRAY = 'ur16';\nvar TYPE_UINT32ARRAY = 'ui32';\nvar TYPE_FLOAT32ARRAY = 'fl32';\nvar TYPE_FLOAT64ARRAY = 'fl64';\nvar TYPE_SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER_LENGTH + TYPE_ARRAYBUFFER.length;\n\nvar toString$1 = Object.prototype.toString;\n\nfunction stringToBuffer(serializedString) {\n    // Fill the string into a ArrayBuffer.\n    var bufferLength = serializedString.length * 0.75;\n    var len = serializedString.length;\n    var i;\n    var p = 0;\n    var encoded1, encoded2, encoded3, encoded4;\n\n    if (serializedString[serializedString.length - 1] === '=') {\n        bufferLength--;\n        if (serializedString[serializedString.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n\n    var buffer = new ArrayBuffer(bufferLength);\n    var bytes = new Uint8Array(buffer);\n\n    for (i = 0; i < len; i += 4) {\n        encoded1 = BASE_CHARS.indexOf(serializedString[i]);\n        encoded2 = BASE_CHARS.indexOf(serializedString[i + 1]);\n        encoded3 = BASE_CHARS.indexOf(serializedString[i + 2]);\n        encoded4 = BASE_CHARS.indexOf(serializedString[i + 3]);\n\n        /*jslint bitwise: true */\n        bytes[p++] = encoded1 << 2 | encoded2 >> 4;\n        bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;\n        bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;\n    }\n    return buffer;\n}\n\n// Converts a buffer to a string to store, serialized, in the backend\n// storage library.\nfunction bufferToString(buffer) {\n    // base64-arraybuffer\n    var bytes = new Uint8Array(buffer);\n    var base64String = '';\n    var i;\n\n    for (i = 0; i < bytes.length; i += 3) {\n        /*jslint bitwise: true */\n        base64String += BASE_CHARS[bytes[i] >> 2];\n        base64String += BASE_CHARS[(bytes[i] & 3) << 4 | bytes[i + 1] >> 4];\n        base64String += BASE_CHARS[(bytes[i + 1] & 15) << 2 | bytes[i + 2] >> 6];\n        base64String += BASE_CHARS[bytes[i + 2] & 63];\n    }\n\n    if (bytes.length % 3 === 2) {\n        base64String = base64String.substring(0, base64String.length - 1) + '=';\n    } else if (bytes.length % 3 === 1) {\n        base64String = base64String.substring(0, base64String.length - 2) + '==';\n    }\n\n    return base64String;\n}\n\n// Serialize a value, afterwards executing a callback (which usually\n// instructs the `setItem()` callback/promise to be executed). This is how\n// we store binary data with localStorage.\nfunction serialize(value, callback) {\n    var valueType = '';\n    if (value) {\n        valueType = toString$1.call(value);\n    }\n\n    // Cannot use `value instanceof ArrayBuffer` or such here, as these\n    // checks fail when running the tests using casper.js...\n    //\n    // TODO: See why those tests fail and use a better solution.\n    if (value && (valueType === '[object ArrayBuffer]' || value.buffer && toString$1.call(value.buffer) === '[object ArrayBuffer]')) {\n        // Convert binary arrays to a string and prefix the string with\n        // a special marker.\n        var buffer;\n        var marker = SERIALIZED_MARKER;\n\n        if (value instanceof ArrayBuffer) {\n            buffer = value;\n            marker += TYPE_ARRAYBUFFER;\n        } else {\n            buffer = value.buffer;\n\n            if (valueType === '[object Int8Array]') {\n                marker += TYPE_INT8ARRAY;\n            } else if (valueType === '[object Uint8Array]') {\n                marker += TYPE_UINT8ARRAY;\n            } else if (valueType === '[object Uint8ClampedArray]') {\n                marker += TYPE_UINT8CLAMPEDARRAY;\n            } else if (valueType === '[object Int16Array]') {\n                marker += TYPE_INT16ARRAY;\n            } else if (valueType === '[object Uint16Array]') {\n                marker += TYPE_UINT16ARRAY;\n            } else if (valueType === '[object Int32Array]') {\n                marker += TYPE_INT32ARRAY;\n            } else if (valueType === '[object Uint32Array]') {\n                marker += TYPE_UINT32ARRAY;\n            } else if (valueType === '[object Float32Array]') {\n                marker += TYPE_FLOAT32ARRAY;\n            } else if (valueType === '[object Float64Array]') {\n                marker += TYPE_FLOAT64ARRAY;\n            } else {\n                callback(new Error('Failed to get type for BinaryArray'));\n            }\n        }\n\n        callback(marker + bufferToString(buffer));\n    } else if (valueType === '[object Blob]') {\n        // Conver the blob to a binaryArray and then to a string.\n        var fileReader = new FileReader();\n\n        fileReader.onload = function () {\n            // Backwards-compatible prefix for the blob type.\n            var str = BLOB_TYPE_PREFIX + value.type + '~' + bufferToString(this.result);\n\n            callback(SERIALIZED_MARKER + TYPE_BLOB + str);\n        };\n\n        fileReader.readAsArrayBuffer(value);\n    } else {\n        try {\n            callback(JSON.stringify(value));\n        } catch (e) {\n            console.error(\"Couldn't convert value into a JSON string: \", value);\n\n            callback(null, e);\n        }\n    }\n}\n\n// Deserialize data we've inserted into a value column/field. We place\n// special markers into our strings to mark them as encoded; this isn't\n// as nice as a meta field, but it's the only sane thing we can do whilst\n// keeping localStorage support intact.\n//\n// Oftentimes this will just deserialize JSON content, but if we have a\n// special marker (SERIALIZED_MARKER, defined above), we will extract\n// some kind of arraybuffer/binary data/typed array out of the string.\nfunction deserialize(value) {\n    // If we haven't marked this string as being specially serialized (i.e.\n    // something other than serialized JSON), we can just return it and be\n    // done with it.\n    if (value.substring(0, SERIALIZED_MARKER_LENGTH) !== SERIALIZED_MARKER) {\n        return JSON.parse(value);\n    }\n\n    // The following code deals with deserializing some kind of Blob or\n    // TypedArray. First we separate out the type of data we're dealing\n    // with from the data itself.\n    var serializedString = value.substring(TYPE_SERIALIZED_MARKER_LENGTH);\n    var type = value.substring(SERIALIZED_MARKER_LENGTH, TYPE_SERIALIZED_MARKER_LENGTH);\n\n    var blobType;\n    // Backwards-compatible blob type serialization strategy.\n    // DBs created with older versions of localForage will simply not have the blob type.\n    if (type === TYPE_BLOB && BLOB_TYPE_PREFIX_REGEX.test(serializedString)) {\n        var matcher = serializedString.match(BLOB_TYPE_PREFIX_REGEX);\n        blobType = matcher[1];\n        serializedString = serializedString.substring(matcher[0].length);\n    }\n    var buffer = stringToBuffer(serializedString);\n\n    // Return the right type based on the code/type set during\n    // serialization.\n    switch (type) {\n        case TYPE_ARRAYBUFFER:\n            return buffer;\n        case TYPE_BLOB:\n            return createBlob([buffer], { type: blobType });\n        case TYPE_INT8ARRAY:\n            return new Int8Array(buffer);\n        case TYPE_UINT8ARRAY:\n            return new Uint8Array(buffer);\n        case TYPE_UINT8CLAMPEDARRAY:\n            return new Uint8ClampedArray(buffer);\n        case TYPE_INT16ARRAY:\n            return new Int16Array(buffer);\n        case TYPE_UINT16ARRAY:\n            return new Uint16Array(buffer);\n        case TYPE_INT32ARRAY:\n            return new Int32Array(buffer);\n        case TYPE_UINT32ARRAY:\n            return new Uint32Array(buffer);\n        case TYPE_FLOAT32ARRAY:\n            return new Float32Array(buffer);\n        case TYPE_FLOAT64ARRAY:\n            return new Float64Array(buffer);\n        default:\n            throw new Error('Unkown type: ' + type);\n    }\n}\n\nvar localforageSerializer = {\n    serialize: serialize,\n    deserialize: deserialize,\n    stringToBuffer: stringToBuffer,\n    bufferToString: bufferToString\n};\n\n/*\n * Includes code from:\n *\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n\nfunction createDbTable(t, dbInfo, callback, errorCallback) {\n    t.executeSql('CREATE TABLE IF NOT EXISTS ' + dbInfo.storeName + ' ' + '(id INTEGER PRIMARY KEY, key unique, value)', [], callback, errorCallback);\n}\n\n// Open the WebSQL database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage$1(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = typeof options[i] !== 'string' ? options[i].toString() : options[i];\n        }\n    }\n\n    var dbInfoPromise = new Promise$1(function (resolve, reject) {\n        // Open the database; the openDatabase API will automatically\n        // create it for us if it doesn't exist.\n        try {\n            dbInfo.db = openDatabase(dbInfo.name, String(dbInfo.version), dbInfo.description, dbInfo.size);\n        } catch (e) {\n            return reject(e);\n        }\n\n        // Create our key/value table if it doesn't exist.\n        dbInfo.db.transaction(function (t) {\n            createDbTable(t, dbInfo, function () {\n                self._dbInfo = dbInfo;\n                resolve();\n            }, function (t, error) {\n                reject(error);\n            });\n        }, reject);\n    });\n\n    dbInfo.serializer = localforageSerializer;\n    return dbInfoPromise;\n}\n\nfunction tryExecuteSql(t, dbInfo, sqlStatement, args, callback, errorCallback) {\n    t.executeSql(sqlStatement, args, callback, function (t, error) {\n        if (error.code === error.SYNTAX_ERR) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name = ?\", [dbInfo.storeName], function (t, results) {\n                if (!results.rows.length) {\n                    // if the table is missing (was deleted)\n                    // re-create it table and retry\n                    createDbTable(t, dbInfo, function () {\n                        t.executeSql(sqlStatement, args, callback, errorCallback);\n                    }, errorCallback);\n                } else {\n                    errorCallback(t, error);\n                }\n            }, errorCallback);\n        } else {\n            errorCallback(t, error);\n        }\n    }, errorCallback);\n}\n\nfunction getItem$1(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName + ' WHERE key = ? LIMIT 1', [key], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).value : null;\n\n                    // Check to see if this is serialized content we need to\n                    // unpack.\n                    if (result) {\n                        result = dbInfo.serializer.deserialize(result);\n                    }\n\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction iterate$1(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var rows = results.rows;\n                    var length = rows.length;\n\n                    for (var i = 0; i < length; i++) {\n                        var item = rows.item(i);\n                        var result = item.value;\n\n                        // Check to see if this is serialized content\n                        // we need to unpack.\n                        if (result) {\n                            result = dbInfo.serializer.deserialize(result);\n                        }\n\n                        result = iterator(result, item.key, i + 1);\n\n                        // void(0) prevents problems with redefinition\n                        // of `undefined`.\n                        if (result !== void 0) {\n                            resolve(result);\n                            return;\n                        }\n                    }\n\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction _setItem(key, value, callback, retriesLeft) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            // The localStorage API doesn't return undefined values in an\n            // \"expected\" way, so undefined is always cast to null in all\n            // drivers. See: https://github.com/mozilla/localForage/pull/42\n            if (value === undefined) {\n                value = null;\n            }\n\n            // Save the original value to pass to the callback.\n            var originalValue = value;\n\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    dbInfo.db.transaction(function (t) {\n                        tryExecuteSql(t, dbInfo, 'INSERT OR REPLACE INTO ' + dbInfo.storeName + ' ' + '(key, value) VALUES (?, ?)', [key, value], function () {\n                            resolve(originalValue);\n                        }, function (t, error) {\n                            reject(error);\n                        });\n                    }, function (sqlError) {\n                        // The transaction failed; check\n                        // to see if it's a quota error.\n                        if (sqlError.code === sqlError.QUOTA_ERR) {\n                            // We reject the callback outright for now, but\n                            // it's worth trying to re-run the transaction.\n                            // Even if the user accepts the prompt to use\n                            // more storage on Safari, this error will\n                            // be called.\n                            //\n                            // Try to re-run the transaction.\n                            if (retriesLeft > 0) {\n                                resolve(_setItem.apply(self, [key, originalValue, callback, retriesLeft - 1]));\n                                return;\n                            }\n                            reject(sqlError);\n                        }\n                    });\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction setItem$1(key, value, callback) {\n    return _setItem.apply(this, [key, value, callback, 1]);\n}\n\nfunction removeItem$1(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName + ' WHERE key = ?', [key], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Deletes every item in the table.\n// TODO: Find out if this resets the AUTO_INCREMENT number.\nfunction clear$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName, [], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Does a simple `COUNT(key)` to get the number of items stored in\n// localForage.\nfunction length$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                // Ahhh, SQL makes this one soooooo easy.\n                tryExecuteSql(t, dbInfo, 'SELECT COUNT(key) as c FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var result = results.rows.item(0).c;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Return the key located at key index X; essentially gets the key from a\n// `WHERE id = ?`. This is the most efficient way I can think to implement\n// this rarely-used (in my experience) part of the API, but it can seem\n// inconsistent, because we do `INSERT OR REPLACE INTO` on `setItem()`, so\n// the ID of each key will change every time it's updated. Perhaps a stored\n// procedure for the `setItem()` SQL would solve this problem?\n// TODO: Don't change ID on `setItem()`.\nfunction key$1(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName + ' WHERE id = ? LIMIT 1', [n + 1], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).key : null;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var keys = [];\n\n                    for (var i = 0; i < results.rows.length; i++) {\n                        keys.push(results.rows.item(i).key);\n                    }\n\n                    resolve(keys);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// https://www.w3.org/TR/webdatabase/#databases\n// > There is no way to enumerate or delete the databases available for an origin from this API.\nfunction getAllStoreNames(db) {\n    return new Promise$1(function (resolve, reject) {\n        db.transaction(function (t) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name <> '__WebKitDatabaseInfoTable__'\", [], function (t, results) {\n                var storeNames = [];\n\n                for (var i = 0; i < results.rows.length; i++) {\n                    storeNames.push(results.rows.item(i).name);\n                }\n\n                resolve({\n                    db: db,\n                    storeNames: storeNames\n                });\n            }, function (t, error) {\n                reject(error);\n            });\n        }, function (sqlError) {\n            reject(sqlError);\n        });\n    });\n}\n\nfunction dropInstance$1(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    var currentConfig = this.config();\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        promise = new Promise$1(function (resolve) {\n            var db;\n            if (options.name === currentConfig.name) {\n                // use the db reference of the current instance\n                db = self._dbInfo.db;\n            } else {\n                db = openDatabase(options.name, '', '', 0);\n            }\n\n            if (!options.storeName) {\n                // drop all database tables\n                resolve(getAllStoreNames(db));\n            } else {\n                resolve({\n                    db: db,\n                    storeNames: [options.storeName]\n                });\n            }\n        }).then(function (operationInfo) {\n            return new Promise$1(function (resolve, reject) {\n                operationInfo.db.transaction(function (t) {\n                    function dropTable(storeName) {\n                        return new Promise$1(function (resolve, reject) {\n                            t.executeSql('DROP TABLE IF EXISTS ' + storeName, [], function () {\n                                resolve();\n                            }, function (t, error) {\n                                reject(error);\n                            });\n                        });\n                    }\n\n                    var operations = [];\n                    for (var i = 0, len = operationInfo.storeNames.length; i < len; i++) {\n                        operations.push(dropTable(operationInfo.storeNames[i]));\n                    }\n\n                    Promise$1.all(operations).then(function () {\n                        resolve();\n                    })[\"catch\"](function (e) {\n                        reject(e);\n                    });\n                }, function (sqlError) {\n                    reject(sqlError);\n                });\n            });\n        });\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar webSQLStorage = {\n    _driver: 'webSQLStorage',\n    _initStorage: _initStorage$1,\n    _support: isWebSQLValid(),\n    iterate: iterate$1,\n    getItem: getItem$1,\n    setItem: setItem$1,\n    removeItem: removeItem$1,\n    clear: clear$1,\n    length: length$1,\n    key: key$1,\n    keys: keys$1,\n    dropInstance: dropInstance$1\n};\n\nfunction isLocalStorageValid() {\n    try {\n        return typeof localStorage !== 'undefined' && 'setItem' in localStorage &&\n        // in IE8 typeof localStorage.setItem === 'object'\n        !!localStorage.setItem;\n    } catch (e) {\n        return false;\n    }\n}\n\nfunction _getKeyPrefix(options, defaultConfig) {\n    var keyPrefix = options.name + '/';\n\n    if (options.storeName !== defaultConfig.storeName) {\n        keyPrefix += options.storeName + '/';\n    }\n    return keyPrefix;\n}\n\n// Check if localStorage throws when saving an item\nfunction checkIfLocalStorageThrows() {\n    var localStorageTestKey = '_localforage_support_test';\n\n    try {\n        localStorage.setItem(localStorageTestKey, true);\n        localStorage.removeItem(localStorageTestKey);\n\n        return false;\n    } catch (e) {\n        return true;\n    }\n}\n\n// Check if localStorage is usable and allows to save an item\n// This method checks if localStorage is usable in Safari Private Browsing\n// mode, or in any other case where the available quota for localStorage\n// is 0 and there wasn't any saved items yet.\nfunction _isLocalStorageUsable() {\n    return !checkIfLocalStorageThrows() || localStorage.length > 0;\n}\n\n// Config the localStorage backend, using options set in the config.\nfunction _initStorage$2(options) {\n    var self = this;\n    var dbInfo = {};\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    dbInfo.keyPrefix = _getKeyPrefix(options, self._defaultConfig);\n\n    if (!_isLocalStorageUsable()) {\n        return Promise$1.reject();\n    }\n\n    self._dbInfo = dbInfo;\n    dbInfo.serializer = localforageSerializer;\n\n    return Promise$1.resolve();\n}\n\n// Remove all keys from the datastore, effectively destroying all data in\n// the app's key/value store!\nfunction clear$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var keyPrefix = self._dbInfo.keyPrefix;\n\n        for (var i = localStorage.length - 1; i >= 0; i--) {\n            var key = localStorage.key(i);\n\n            if (key.indexOf(keyPrefix) === 0) {\n                localStorage.removeItem(key);\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Retrieve an item from the store. Unlike the original async_storage\n// library in Gaia, we don't modify return values at all. If a key's value\n// is `undefined`, we pass that value to the callback function.\nfunction getItem$2(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result = localStorage.getItem(dbInfo.keyPrefix + key);\n\n        // If a result was found, parse it from the serialized\n        // string into a JS object. If result isn't truthy, the key\n        // is likely undefined and we'll pass it straight to the\n        // callback.\n        if (result) {\n            result = dbInfo.serializer.deserialize(result);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items in the store.\nfunction iterate$2(iterator, callback) {\n    var self = this;\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var keyPrefix = dbInfo.keyPrefix;\n        var keyPrefixLength = keyPrefix.length;\n        var length = localStorage.length;\n\n        // We use a dedicated iterator instead of the `i` variable below\n        // so other keys we fetch in localStorage aren't counted in\n        // the `iterationNumber` argument passed to the `iterate()`\n        // callback.\n        //\n        // See: github.com/mozilla/localForage/pull/435#discussion_r38061530\n        var iterationNumber = 1;\n\n        for (var i = 0; i < length; i++) {\n            var key = localStorage.key(i);\n            if (key.indexOf(keyPrefix) !== 0) {\n                continue;\n            }\n            var value = localStorage.getItem(key);\n\n            // If a result was found, parse it from the serialized\n            // string into a JS object. If result isn't truthy, the\n            // key is likely undefined and we'll pass it straight\n            // to the iterator.\n            if (value) {\n                value = dbInfo.serializer.deserialize(value);\n            }\n\n            value = iterator(value, key.substring(keyPrefixLength), iterationNumber++);\n\n            if (value !== void 0) {\n                return value;\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Same as localStorage's key() method, except takes a callback.\nfunction key$2(n, callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result;\n        try {\n            result = localStorage.key(n);\n        } catch (error) {\n            result = null;\n        }\n\n        // Remove the prefix from the key, if a key is found.\n        if (result) {\n            result = result.substring(dbInfo.keyPrefix.length);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var length = localStorage.length;\n        var keys = [];\n\n        for (var i = 0; i < length; i++) {\n            var itemKey = localStorage.key(i);\n            if (itemKey.indexOf(dbInfo.keyPrefix) === 0) {\n                keys.push(itemKey.substring(dbInfo.keyPrefix.length));\n            }\n        }\n\n        return keys;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Supply the number of keys in the datastore to the callback function.\nfunction length$2(callback) {\n    var self = this;\n    var promise = self.keys().then(function (keys) {\n        return keys.length;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Remove an item from the store, nice and simple.\nfunction removeItem$2(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        localStorage.removeItem(dbInfo.keyPrefix + key);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Set a key's value and run an optional callback once the value is set.\n// Unlike Gaia's implementation, the callback function is passed the value,\n// in case you want to operate on that value only after you're sure it\n// saved, or something like that.\nfunction setItem$2(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        // Convert undefined values to null.\n        // https://github.com/mozilla/localForage/pull/42\n        if (value === undefined) {\n            value = null;\n        }\n\n        // Save the original value to pass to the callback.\n        var originalValue = value;\n\n        return new Promise$1(function (resolve, reject) {\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    try {\n                        localStorage.setItem(dbInfo.keyPrefix + key, value);\n                        resolve(originalValue);\n                    } catch (e) {\n                        // localStorage capacity exceeded.\n                        // TODO: Make this a specific error/event.\n                        if (e.name === 'QuotaExceededError' || e.name === 'NS_ERROR_DOM_QUOTA_REACHED') {\n                            reject(e);\n                        }\n                        reject(e);\n                    }\n                }\n            });\n        });\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction dropInstance$2(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        var currentConfig = this.config();\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        promise = new Promise$1(function (resolve) {\n            if (!options.storeName) {\n                resolve(options.name + '/');\n            } else {\n                resolve(_getKeyPrefix(options, self._defaultConfig));\n            }\n        }).then(function (keyPrefix) {\n            for (var i = localStorage.length - 1; i >= 0; i--) {\n                var key = localStorage.key(i);\n\n                if (key.indexOf(keyPrefix) === 0) {\n                    localStorage.removeItem(key);\n                }\n            }\n        });\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar localStorageWrapper = {\n    _driver: 'localStorageWrapper',\n    _initStorage: _initStorage$2,\n    _support: isLocalStorageValid(),\n    iterate: iterate$2,\n    getItem: getItem$2,\n    setItem: setItem$2,\n    removeItem: removeItem$2,\n    clear: clear$2,\n    length: length$2,\n    key: key$2,\n    keys: keys$2,\n    dropInstance: dropInstance$2\n};\n\nvar sameValue = function sameValue(x, y) {\n    return x === y || typeof x === 'number' && typeof y === 'number' && isNaN(x) && isNaN(y);\n};\n\nvar includes = function includes(array, searchElement) {\n    var len = array.length;\n    var i = 0;\n    while (i < len) {\n        if (sameValue(array[i], searchElement)) {\n            return true;\n        }\n        i++;\n    }\n\n    return false;\n};\n\nvar isArray = Array.isArray || function (arg) {\n    return Object.prototype.toString.call(arg) === '[object Array]';\n};\n\n// Drivers are stored here when `defineDriver()` is called.\n// They are shared across all instances of localForage.\nvar DefinedDrivers = {};\n\nvar DriverSupport = {};\n\nvar DefaultDrivers = {\n    INDEXEDDB: asyncStorage,\n    WEBSQL: webSQLStorage,\n    LOCALSTORAGE: localStorageWrapper\n};\n\nvar DefaultDriverOrder = [DefaultDrivers.INDEXEDDB._driver, DefaultDrivers.WEBSQL._driver, DefaultDrivers.LOCALSTORAGE._driver];\n\nvar OptionalDriverMethods = ['dropInstance'];\n\nvar LibraryMethods = ['clear', 'getItem', 'iterate', 'key', 'keys', 'length', 'removeItem', 'setItem'].concat(OptionalDriverMethods);\n\nvar DefaultConfig = {\n    description: '',\n    driver: DefaultDriverOrder.slice(),\n    name: 'localforage',\n    // Default DB size is _JUST UNDER_ 5MB, as it's the highest size\n    // we can use without a prompt.\n    size: 4980736,\n    storeName: 'keyvaluepairs',\n    version: 1.0\n};\n\nfunction callWhenReady(localForageInstance, libraryMethod) {\n    localForageInstance[libraryMethod] = function () {\n        var _args = arguments;\n        return localForageInstance.ready().then(function () {\n            return localForageInstance[libraryMethod].apply(localForageInstance, _args);\n        });\n    };\n}\n\nfunction extend() {\n    for (var i = 1; i < arguments.length; i++) {\n        var arg = arguments[i];\n\n        if (arg) {\n            for (var _key in arg) {\n                if (arg.hasOwnProperty(_key)) {\n                    if (isArray(arg[_key])) {\n                        arguments[0][_key] = arg[_key].slice();\n                    } else {\n                        arguments[0][_key] = arg[_key];\n                    }\n                }\n            }\n        }\n    }\n\n    return arguments[0];\n}\n\nvar LocalForage = function () {\n    function LocalForage(options) {\n        _classCallCheck(this, LocalForage);\n\n        for (var driverTypeKey in DefaultDrivers) {\n            if (DefaultDrivers.hasOwnProperty(driverTypeKey)) {\n                var driver = DefaultDrivers[driverTypeKey];\n                var driverName = driver._driver;\n                this[driverTypeKey] = driverName;\n\n                if (!DefinedDrivers[driverName]) {\n                    // we don't need to wait for the promise,\n                    // since the default drivers can be defined\n                    // in a blocking manner\n                    this.defineDriver(driver);\n                }\n            }\n        }\n\n        this._defaultConfig = extend({}, DefaultConfig);\n        this._config = extend({}, this._defaultConfig, options);\n        this._driverSet = null;\n        this._initDriver = null;\n        this._ready = false;\n        this._dbInfo = null;\n\n        this._wrapLibraryMethodsWithReady();\n        this.setDriver(this._config.driver)[\"catch\"](function () {});\n    }\n\n    // Set any config values for localForage; can be called anytime before\n    // the first API call (e.g. `getItem`, `setItem`).\n    // We loop through options so we don't overwrite existing config\n    // values.\n\n\n    LocalForage.prototype.config = function config(options) {\n        // If the options argument is an object, we use it to set values.\n        // Otherwise, we return either a specified config value or all\n        // config values.\n        if ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) === 'object') {\n            // If localforage is ready and fully initialized, we can't set\n            // any new configuration values. Instead, we return an error.\n            if (this._ready) {\n                return new Error(\"Can't call config() after localforage \" + 'has been used.');\n            }\n\n            for (var i in options) {\n                if (i === 'storeName') {\n                    options[i] = options[i].replace(/\\W/g, '_');\n                }\n\n                if (i === 'version' && typeof options[i] !== 'number') {\n                    return new Error('Database version must be a number.');\n                }\n\n                this._config[i] = options[i];\n            }\n\n            // after all config options are set and\n            // the driver option is used, try setting it\n            if ('driver' in options && options.driver) {\n                return this.setDriver(this._config.driver);\n            }\n\n            return true;\n        } else if (typeof options === 'string') {\n            return this._config[options];\n        } else {\n            return this._config;\n        }\n    };\n\n    // Used to define a custom driver, shared across all instances of\n    // localForage.\n\n\n    LocalForage.prototype.defineDriver = function defineDriver(driverObject, callback, errorCallback) {\n        var promise = new Promise$1(function (resolve, reject) {\n            try {\n                var driverName = driverObject._driver;\n                var complianceError = new Error('Custom driver not compliant; see ' + 'https://mozilla.github.io/localForage/#definedriver');\n\n                // A driver name should be defined and not overlap with the\n                // library-defined, default drivers.\n                if (!driverObject._driver) {\n                    reject(complianceError);\n                    return;\n                }\n\n                var driverMethods = LibraryMethods.concat('_initStorage');\n                for (var i = 0, len = driverMethods.length; i < len; i++) {\n                    var driverMethodName = driverMethods[i];\n\n                    // when the property is there,\n                    // it should be a method even when optional\n                    var isRequired = !includes(OptionalDriverMethods, driverMethodName);\n                    if ((isRequired || driverObject[driverMethodName]) && typeof driverObject[driverMethodName] !== 'function') {\n                        reject(complianceError);\n                        return;\n                    }\n                }\n\n                var configureMissingMethods = function configureMissingMethods() {\n                    var methodNotImplementedFactory = function methodNotImplementedFactory(methodName) {\n                        return function () {\n                            var error = new Error('Method ' + methodName + ' is not implemented by the current driver');\n                            var promise = Promise$1.reject(error);\n                            executeCallback(promise, arguments[arguments.length - 1]);\n                            return promise;\n                        };\n                    };\n\n                    for (var _i = 0, _len = OptionalDriverMethods.length; _i < _len; _i++) {\n                        var optionalDriverMethod = OptionalDriverMethods[_i];\n                        if (!driverObject[optionalDriverMethod]) {\n                            driverObject[optionalDriverMethod] = methodNotImplementedFactory(optionalDriverMethod);\n                        }\n                    }\n                };\n\n                configureMissingMethods();\n\n                var setDriverSupport = function setDriverSupport(support) {\n                    if (DefinedDrivers[driverName]) {\n                        console.info('Redefining LocalForage driver: ' + driverName);\n                    }\n                    DefinedDrivers[driverName] = driverObject;\n                    DriverSupport[driverName] = support;\n                    // don't use a then, so that we can define\n                    // drivers that have simple _support methods\n                    // in a blocking manner\n                    resolve();\n                };\n\n                if ('_support' in driverObject) {\n                    if (driverObject._support && typeof driverObject._support === 'function') {\n                        driverObject._support().then(setDriverSupport, reject);\n                    } else {\n                        setDriverSupport(!!driverObject._support);\n                    }\n                } else {\n                    setDriverSupport(true);\n                }\n            } catch (e) {\n                reject(e);\n            }\n        });\n\n        executeTwoCallbacks(promise, callback, errorCallback);\n        return promise;\n    };\n\n    LocalForage.prototype.driver = function driver() {\n        return this._driver || null;\n    };\n\n    LocalForage.prototype.getDriver = function getDriver(driverName, callback, errorCallback) {\n        var getDriverPromise = DefinedDrivers[driverName] ? Promise$1.resolve(DefinedDrivers[driverName]) : Promise$1.reject(new Error('Driver not found.'));\n\n        executeTwoCallbacks(getDriverPromise, callback, errorCallback);\n        return getDriverPromise;\n    };\n\n    LocalForage.prototype.getSerializer = function getSerializer(callback) {\n        var serializerPromise = Promise$1.resolve(localforageSerializer);\n        executeTwoCallbacks(serializerPromise, callback);\n        return serializerPromise;\n    };\n\n    LocalForage.prototype.ready = function ready(callback) {\n        var self = this;\n\n        var promise = self._driverSet.then(function () {\n            if (self._ready === null) {\n                self._ready = self._initDriver();\n            }\n\n            return self._ready;\n        });\n\n        executeTwoCallbacks(promise, callback, callback);\n        return promise;\n    };\n\n    LocalForage.prototype.setDriver = function setDriver(drivers, callback, errorCallback) {\n        var self = this;\n\n        if (!isArray(drivers)) {\n            drivers = [drivers];\n        }\n\n        var supportedDrivers = this._getSupportedDrivers(drivers);\n\n        function setDriverToConfig() {\n            self._config.driver = self.driver();\n        }\n\n        function extendSelfWithDriver(driver) {\n            self._extend(driver);\n            setDriverToConfig();\n\n            self._ready = self._initStorage(self._config);\n            return self._ready;\n        }\n\n        function initDriver(supportedDrivers) {\n            return function () {\n                var currentDriverIndex = 0;\n\n                function driverPromiseLoop() {\n                    while (currentDriverIndex < supportedDrivers.length) {\n                        var driverName = supportedDrivers[currentDriverIndex];\n                        currentDriverIndex++;\n\n                        self._dbInfo = null;\n                        self._ready = null;\n\n                        return self.getDriver(driverName).then(extendSelfWithDriver)[\"catch\"](driverPromiseLoop);\n                    }\n\n                    setDriverToConfig();\n                    var error = new Error('No available storage method found.');\n                    self._driverSet = Promise$1.reject(error);\n                    return self._driverSet;\n                }\n\n                return driverPromiseLoop();\n            };\n        }\n\n        // There might be a driver initialization in progress\n        // so wait for it to finish in order to avoid a possible\n        // race condition to set _dbInfo\n        var oldDriverSetDone = this._driverSet !== null ? this._driverSet[\"catch\"](function () {\n            return Promise$1.resolve();\n        }) : Promise$1.resolve();\n\n        this._driverSet = oldDriverSetDone.then(function () {\n            var driverName = supportedDrivers[0];\n            self._dbInfo = null;\n            self._ready = null;\n\n            return self.getDriver(driverName).then(function (driver) {\n                self._driver = driver._driver;\n                setDriverToConfig();\n                self._wrapLibraryMethodsWithReady();\n                self._initDriver = initDriver(supportedDrivers);\n            });\n        })[\"catch\"](function () {\n            setDriverToConfig();\n            var error = new Error('No available storage method found.');\n            self._driverSet = Promise$1.reject(error);\n            return self._driverSet;\n        });\n\n        executeTwoCallbacks(this._driverSet, callback, errorCallback);\n        return this._driverSet;\n    };\n\n    LocalForage.prototype.supports = function supports(driverName) {\n        return !!DriverSupport[driverName];\n    };\n\n    LocalForage.prototype._extend = function _extend(libraryMethodsAndProperties) {\n        extend(this, libraryMethodsAndProperties);\n    };\n\n    LocalForage.prototype._getSupportedDrivers = function _getSupportedDrivers(drivers) {\n        var supportedDrivers = [];\n        for (var i = 0, len = drivers.length; i < len; i++) {\n            var driverName = drivers[i];\n            if (this.supports(driverName)) {\n                supportedDrivers.push(driverName);\n            }\n        }\n        return supportedDrivers;\n    };\n\n    LocalForage.prototype._wrapLibraryMethodsWithReady = function _wrapLibraryMethodsWithReady() {\n        // Add a stub for each driver API method that delays the call to the\n        // corresponding driver method until localForage is ready. These stubs\n        // will be replaced by the driver methods as soon as the driver is\n        // loaded, so there is no performance impact.\n        for (var i = 0, len = LibraryMethods.length; i < len; i++) {\n            callWhenReady(this, LibraryMethods[i]);\n        }\n    };\n\n    LocalForage.prototype.createInstance = function createInstance(options) {\n        return new LocalForage(options);\n    };\n\n    return LocalForage;\n}();\n\n// The actual localForage object that we expose as a module or via a\n// global. It's extended by pulling in one of our other libraries.\n\n\nvar localforage_js = new LocalForage();\n\nmodule.exports = localforage_js;\n\n},{\"3\":3}]},{},[4])(4)\n});\n","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","var _typeof = require(\"../helpers/typeof\");\n\nvar assertThisInitialized = require(\"./assertThisInitialized\");\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}\n\nmodule.exports = _possibleConstructorReturn;","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inherits;","var getPrototypeOf = require(\"./getPrototypeOf\");\n\nvar setPrototypeOf = require(\"./setPrototypeOf\");\n\nvar isNativeFunction = require(\"./isNativeFunction\");\n\nvar construct = require(\"./construct\");\n\nfunction _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n  module.exports = _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n\n  return _wrapNativeSuper(Class);\n}\n\nmodule.exports = _wrapNativeSuper;","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","function _typeof2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized;","function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}\n\nmodule.exports = _isNativeFunction;","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nfunction isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    module.exports = _construct = Reflect.construct;\n  } else {\n    module.exports = _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nmodule.exports = _construct;","class StorageError extends Error {\n}\n\nexport default StorageError;\n","import localForage from 'localforage';\nimport StorageError from '../error/StorageError';\n\nconst stores = {};\n\nconst setStorage = (storageConfig) => {\n    const { storeName } = storageConfig;\n    if (stores[storeName]) {\n        throw new StorageError(\n            `Cant initiate reducer under storage name ${storeName}, storage already exists`,\n        );\n    }\n    stores[storeName] = localForage.createInstance(storageConfig);\n\n    return stores[storeName];\n};\n\nconst getStorage = (storageConfig) => {\n    const { storeName } = storageConfig;\n    if (stores[storeName] === undefined) {\n        throw new StorageError(\n            `Storage under ${storeName} name doesn't exist,\n             ensure you use same storage configuration for reducer and related actions`,\n        );\n    }\n\n    return stores[storeName];\n};\n\nexport default {\n    getStorage,\n    setStorage,\n};\n","import registerPromiseWorker from 'promise-worker/register';\nimport storageManager from './storageManager';\nimport {\n    STORAGE_SAVE,\n    STORAGE_REMOVE,\n    STORAGE_INITIATE,\n    STORAGE_KEYS,\n    STORAGE_GET,\n} from '../constants/workerTasks';\n\nregisterPromiseWorker(async (eventMessage) => {\n    const {\n        storageConfig,\n        identifier,\n        state,\n        type,\n    } = eventMessage;\n    if (type === STORAGE_INITIATE) {\n        return storageManager.setStorage(storageConfig);\n    }\n    if (type === STORAGE_SAVE) {\n        const storage = storageManager.getStorage(storageConfig);\n\n        return storage.setItem(identifier, state);\n    }\n    if (type === STORAGE_REMOVE) {\n        const storage = storageManager.getStorage(storageConfig);\n\n        return storage.removeItem(identifier);\n    }\n    if (type === STORAGE_GET) {\n        const storage = storageManager.getStorage(storageConfig);\n\n        return storage.getItem(identifier);\n    }\n    if (type === STORAGE_KEYS) {\n        const storage = storageManager.getStorage(storageConfig);\n\n        return storage.keys();\n    }\n});\n","const STORAGE_SAVE = 'save';\nconst STORAGE_REMOVE = 'remove';\nconst STORAGE_INITIATE = 'initiate';\nconst STORAGE_GET = 'get';\nconst STORAGE_KEYS = 'keys';\n\nexport {\n    STORAGE_REMOVE,\n    STORAGE_SAVE,\n    STORAGE_INITIATE,\n    STORAGE_GET,\n    STORAGE_KEYS,\n};\n"],"sourceRoot":""}